from discord.ext import commands
from typing import Union, Optional
from ..cogs.utils.context import Context
from discord import Member, TextChannel, User, VoiceChannel


class GuildManagement(commands.Cog):
    client: commands.Bot = ...
    def __init__(self, client: commands.Bot) -> None: ...
    async def channel(self, ctx: Context, action: str, channel: Optional[Union[TextChannel, VoiceChannel]], *,
                      reason: Optional[str] =...): ...
    async def ban(self, ctx: Context, user: Union[Member, User, int], *, reason: str=...) -> None: ...
    async def unban(self, ctx: Context, user: Union[Member, User, int], *, reason: str=...) -> None: ...
    async def kick(self, ctx: Context, user: Member, *, reason: str=...) -> None: ...
    async def mute(self, ctx: Context, user: Member, *, reason: str=...) -> None: ...
    async def unmute(self, ctx: Context, user: Member, *, reason: str=...) -> None: ...
    async def purge(self, ctx: Context, amount: int, member: Optional[Member] =...) -> None: ...
    async def clear_channel(self, ctx: Context) -> None: ...
    async def silence(self, ctx: Context) -> None: ...
    async def unsilence(self, ctx: Context) -> None: ...

def setup(client: commands.Bot) -> None: ...
